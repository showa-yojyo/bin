#!/usr/bin/env python
"""bibl: Print bibliography for my reading notes.

This script is rewritten from tools/preliminary.py version 1.3.1 previously version-
controlled in the reading notes.

Requirements
------------

* click
* jinja2
"""

from __future__ import annotations

import csv
from typing import TYPE_CHECKING

import click
from jinja2 import Environment

if TYPE_CHECKING:
    from collections.abc import Iterator

__version__ = "1.0.0"

# TODO: Treat dict keys case-insensitive (especially ISBN).
TEMPLATE = """\
{% for book in bibliography %}
{{ book["title"] }}
======================================================================

:著者: {{ book["authors"] }}
{%- if "translators" in book %}
:訳者: {{ book["translators"] }}
{%- endif %}
:出版社: {{ book["publisher"] }}
:発行年: {{ book["pubyear"] }} 年
:ISBN: {{ book["isbn"] }}
{%- if not "url" in book %}
:関連 URL: なし
{% elif book["url"].startswith("http") %}
:関連 URL: <{{ book["url"] }}>
{% else %}
:関連 URL: 不明または調査中
{% endif %}
.. todo::

   寸評を記す。
{% endfor -%}
"""


def read(source: click.File) -> tuple[dict[str, str]]:
    """Read TSV from the source."""

    return tuple(
        book for book in csv.DictReader(source, delimiter="\t", quoting=csv.QUOTE_NONE)
    )


def parse(input: tuple[dict[str, str]]) -> Iterator[str]:
    """Parse the input data."""

    for i in input:
        if i["translators"] == "n/a":
            del i["translators"]
        if i["url"] == "unknown":
            del i["url"]

    return (
        Environment(autoescape=False).from_string(TEMPLATE).generate(bibliography=input)
    )


@click.command()
@click.argument(
    "source",
    metavar="<FILE>",
    nargs=1,
    type=click.File("r"),
)
@click.help_option(
    help="display this message and exit",
)
@click.version_option(
    __version__,
    help="output version information and exit",
)
def main(source: click.File) -> None:
    """Print a bibliography for my reading notes."""

    for book in parse(read(source)):
        click.echo(book, nl=False)


if __name__ == "__main__":
    main()
